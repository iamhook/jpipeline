plugins {
    id 'application'
}
group 'com.example'
version '1.0-SNAPSHOT'
repositories {
    mavenCentral()
}
def javaFXPlatform = getJavaFXPlatform()
def javaFXVersion = "15.0.1"
dependencies {
    // you need a dependency for each of the JavaFX modules you're going to use
    implementation "org.openjfx:javafx-base:${javaFXVersion}:${javaFXPlatform}"
    implementation "org.openjfx:javafx-controls:${javaFXVersion}:${javaFXPlatform}"
    implementation "org.openjfx:javafx-graphics:${javaFXVersion}:${javaFXPlatform}"
    implementation "org.openjfx:javafx-fxml:${javaFXVersion}:${javaFXPlatform}"
}
application {
    //Java Module System module name
    mainModule.set('com.jpipeline.javafxclient')
    //Your JavaFX application class
    mainClass.set('com.jpipeline.javafxclient.Main')
}
java {
    // this enables Java Modularity in Gradle (version 6.7 and above)
    modularity.inferModulePath.set(true)
}
// Based on this StackOverflow answer: https://stackoverflow.com/a/65209664/653519
private static String getJavaFXPlatform() {
    def currentOS = org.gradle.nativeplatform.platform.internal.DefaultNativePlatform.currentOperatingSystem;
    if (currentOS.isWindows()) {
        return 'win'
    } else if (currentOS.isLinux()) {
        return 'linux'
    } else if (currentOS.isMacOsX()) {
        return 'mac'
    }
    return null
}

/*plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.9'
}

mainClassName = 'com.jpipeline.Main'

javafx {
    version = "11.0.2"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

dependencies {
    //implementation project(":jpipeline-common")

}

jar {
    enabled = true
}*/
