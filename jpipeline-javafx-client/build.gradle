plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.9'
}


group 'org.example'
version '1.0-SNAPSHOT'

def javaFxVersion = 16

dependencies {
    implementation project(":jpipeline-common")
    implementation 'org.springframework.boot:spring-boot-starter-rsocket:2.4.5'

    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.14.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.1'
    testImplementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.14.1'
    testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'


    implementation 'org.kordamp.ikonli:ikonli-javafx:11.1.0'
    implementation 'org.kordamp.ikonli:ikonli-fontawesome-pack:11.1.0'

    runtimeOnly "org.openjfx:javafx-graphics:$javaFxVersion:win"
    runtimeOnly "org.openjfx:javafx-graphics:$javaFxVersion:linux"
    runtimeOnly "org.openjfx:javafx-graphics:$javaFxVersion:mac"
}


mainClassName = 'com.jpipeline.javafxclient.Main'

repositories {
    mavenCentral()
}

javafx {
    version = javaFxVersion
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

jar {

    enabled = true

    dependsOn(':jpipeline-common:jar')

    manifest {
        attributes 'Main-Class': mainClassName
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

test {
    useJUnitPlatform()
}
